stages:
- build
- package
- deploy

code-style-check:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/$CI_JOB_NAME
  script:
  - set +e
  - for file in $(git diff HEAD~ HEAD --name-only --diff-filter=ACMR); do
      [[ "${file}" =~ \.(c|cpp|cxx|m|h|hpp|hxx)$ ]] || continue;
      grep -vr $'\r' "${file}" >/dev/null || (echo "${file} must not contain carriage return as line endings." && exit 1);
      file --mime "${file}" | grep "charset=us-ascii" >/dev/null || (echo "${file} must be encoded as ASCII text." && exit 1);
      clang-format -verbose -style=file "${file}" > "${file}.formatted";
      diff -q "${file}" "${file}.formatted";
      return_code="$?";
      rm -f "${file}.formatted";
      if [[ "${return_code}" -ne 0 ]]; then
        >&2 echo "The code style of file \"${file}\" does not follow the code style guideline of this project.";
        exit 1;
      fi;
    done

ubuntu-self-contained:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/$CI_JOB_NAME
  script:
  - wget https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-x86_64.tar.gz
  - tar xf cmake-3.6.3-Linux-x86_64.tar.gz
  - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-x86_64/bin/cmake
  - make self GRDIR=/usr/local/gr
  - mkdir artifacts
  - cp lib/gks/demo artifacts/gksdemo
  - cp lib/gks/qt/gksqt artifacts/gksqt
  - cp lib/gr/demo artifacts/grdemo
  - cp lib/gks/libGKS.so lib/gks/libGKS.a lib/gks/plugin/*.so lib/gr/libGR.so lib/gr/libGR.a lib/gr3/libGR3.so lib/gr3/libGR3platform.so lib/gr/qtgr/*.so artifacts/
  - cp -r lib/gks/fonts artifacts/
  - mkdir artifacts/include/
  - cp lib/gks/gks.h lib/gr/gr.h lib/gr3/gr3.h lib/gr/qtgr/grwidget.h artifacts/include/
  - mv artifacts artifacts-ubuntu1604
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-ubuntu1604/

ubuntu-cmake-self-contained:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/ubuntu-self-contained
  script:
    - wget https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-x86_64.tar.gz
    - tar xf cmake-3.6.3-Linux-x86_64.tar.gz
    - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-x86_64/bin/cmake
    - make -C 3rdparty default extras
    - mkdir build
    - cd build
    - $CMAKE_CMD .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/install -DGR_USE_BUNDLED_LIBRARIES=ON
    - make
    - make install
    - cd ..
    - mv install artifacts-ubuntu1604-cmake
  artifacts:
    expire_in: 1 week
    paths:
      - artifacts-ubuntu1604-cmake/

ubuntu-system-dependencies:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/$CI_JOB_NAME
  script:
  - make install GRDIR=/usr/local/gr

ubuntu-cmake-system-dependencies:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/ubuntu-system-dependencies
  script:
    - apt-get update
    - apt-get install -y libqhull-dev libbz2-dev libavdevice-dev libtheora-dev libogg-dev libvpx-dev libfreetype6-dev
    - wget https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-x86_64.tar.gz
    - tar xf cmake-3.6.3-Linux-x86_64.tar.gz
    - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-x86_64/bin/cmake
    - mkdir build
    - cd build
    - $CMAKE_CMD .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/install -DGR_USE_BUNDLED_LIBRARIES=OFF
    - make

debian-self-contained:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/$CI_JOB_NAME
  script:
  - wget https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-x86_64.tar.gz
  - tar xf cmake-3.6.3-Linux-x86_64.tar.gz
  - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-x86_64/bin/cmake
  - make self GRDIR=/usr/local/gr
  - mkdir artifacts
  - cp lib/gks/demo artifacts/gksdemo
  - cp lib/gks/qt/gksqt artifacts/gksqt
  - cp lib/gr/demo artifacts/grdemo
  - cp lib/gks/libGKS.so lib/gks/libGKS.a lib/gks/plugin/*.so lib/gr/libGR.so lib/gr/libGR.a lib/gr3/libGR3.so lib/gr3/libGR3platform.so lib/gr/qtgr/*.so artifacts/
  - cp -r lib/gks/fonts artifacts/
  - mkdir artifacts/include/
  - cp lib/gks/gks.h lib/gr/gr.h lib/gr3/gr3.h lib/gr/qtgr/grwidget.h artifacts/include/
  - mv artifacts artifacts-debian9
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-debian9/

debian-cmake-self-contained:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/debian-self-contained
  script:
    - wget https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-x86_64.tar.gz
    - tar xf cmake-3.6.3-Linux-x86_64.tar.gz
    - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-x86_64/bin/cmake
    - make -C 3rdparty default extras
    - mkdir build
    - cd build
    - $CMAKE_CMD .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/install -DGR_USE_BUNDLED_LIBRARIES=ON
    - make
    - make install
    - cd ..
    - mv install artifacts-debian9-cmake
  artifacts:
    expire_in: 1 week
    paths:
      - artifacts-debian9-cmake/

debian-system-dependencies:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/$CI_JOB_NAME
  script:
  - make install GRDIR=/usr/local/gr

debian-cmake-system-dependencies:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/debian-system-dependencies
  script:
    - apt-get update
    - apt-get install -y libqhull-dev libbz2-dev libfreetype6-dev
    - wget https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-x86_64.tar.gz
    - tar xf cmake-3.6.3-Linux-x86_64.tar.gz
    - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-x86_64/bin/cmake
    - mkdir build
    - cd build
    - $CMAKE_CMD .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/install -DGR_USE_BUNDLED_LIBRARIES=OFF
    - make

centos7-self-contained:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/$CI_JOB_NAME
  script:
  - curl -LO https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-x86_64.tar.gz
  - tar xf cmake-3.6.3-Linux-x86_64.tar.gz
  - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-x86_64/bin/cmake
  - make self GRDIR=/usr/local/gr
  - mkdir artifacts
  - cp lib/gks/demo artifacts/gksdemo
  - cp lib/gks/qt/gksqt artifacts/gksqt
  - cp lib/gr/demo artifacts/grdemo
  - cp lib/gks/libGKS.so lib/gks/libGKS.a lib/gks/plugin/*.so lib/gr/libGR.so lib/gr/libGR.a lib/gr3/libGR3.so lib/gr3/libGR3platform.so lib/gr/qtgr/*.so artifacts/
  - cp -r lib/gks/fonts artifacts/
  - mkdir artifacts/include/
  - cp lib/gks/gks.h lib/gr/gr.h lib/gr3/gr3.h lib/gr/qtgr/grwidget.h artifacts/include/
  - mv artifacts artifacts-centos7
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-centos7/

centos7-cmake-self-contained:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/centos7-self-contained
  script:
    - curl -LO https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-x86_64.tar.gz
    - tar xf cmake-3.6.3-Linux-x86_64.tar.gz
    - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-x86_64/bin/cmake
    - make -C 3rdparty default extras
    - mkdir build
    - cd build
    - $CMAKE_CMD .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/install -DGR_USE_BUNDLED_LIBRARIES=ON
    - make
    - make install
    - mv ../install/lib64/ ../install/lib/
    - cd ..
    - mv install artifacts-centos7-cmake
  artifacts:
    expire_in: 1 week
    paths:
      - artifacts-centos7-cmake/

centos7-system-dependencies:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/$CI_JOB_NAME
  script:
  - make install GRDIR=/usr/local/gr

centos7-cmake-system-dependencies:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/centos7-system-dependencies
  script:
    - yum install -y libjpeg-turbo-devel libtiff-devel bzip2-devel
    - curl -LO https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-x86_64.tar.gz
    - tar xf cmake-3.6.3-Linux-x86_64.tar.gz
    - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-x86_64/bin/cmake
    - make -C 3rdparty default TARGETS="qhull"
    - mkdir build
    - cd build
    - $CMAKE_CMD .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/install -DGR_USE_BUNDLED_LIBRARIES=ON
    - make

centos6-32bit-self-contained:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/$CI_JOB_NAME
  script:
  - curl -LO https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-i386.tar.gz
  - tar xf cmake-3.6.3-Linux-i386.tar.gz
  - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-i386/bin/cmake
  - THEORA_EXTRA_CONFIGURE_FLAGS=--disable-asm make self GRDIR=/usr/local/gr
  - mkdir artifacts
  - cp lib/gks/demo artifacts/gksdemo
  - cp lib/gks/qt/gksqt artifacts/gksqt
  - cp lib/gr/demo artifacts/grdemo
  - cp lib/gks/libGKS.so lib/gks/libGKS.a lib/gks/plugin/*.so lib/gr/libGR.so lib/gr/libGR.a lib/gr3/libGR3.so lib/gr3/libGR3platform.so lib/gr/qtgr/*.so artifacts/
  - cp -r lib/gks/fonts artifacts/
  - mkdir artifacts/include/
  - cp lib/gks/gks.h lib/gr/gr.h lib/gr3/gr3.h lib/gr/qtgr/grwidget.h artifacts/include/
  - mv artifacts artifacts-centos6-32bit
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-centos6-32bit/

centos6-32bit-cmake-self-contained:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/centos6-32bit-self-contained
  script:
    - curl -LO https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-i386.tar.gz
    - tar xf cmake-3.6.3-Linux-i386.tar.gz
    - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-i386/bin/cmake
    - THEORA_EXTRA_CONFIGURE_FLAGS=--disable-asm make -C 3rdparty default extras
    - mkdir build
    - cd build
    - $CMAKE_CMD .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/install -DGR_USE_BUNDLED_LIBRARIES=ON
    - make
    - make install
    - cd ..
    - mv install artifacts-centos6-32bit-cmake
  artifacts:
    expire_in: 1 week
    paths:
      - artifacts-centos6-32bit-cmake/

centos6-32bit-system-dependencies:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/$CI_JOB_NAME
  script:
  - make install GRDIR=/usr/local/gr

centos6-32bit-cmake-system-dependencies:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/centos6-32bit-system-dependencies
  script:
    - yum install -y libtiff-devel bzip2-devel
    - curl -LO https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-i386.tar.gz
    - tar xf cmake-3.6.3-Linux-i386.tar.gz
    - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-i386/bin/cmake
    - make -C 3rdparty default TARGETS="qhull"
    - mkdir build
    - cd build
    - $CMAKE_CMD .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/install -DGR_USE_BUNDLED_LIBRARIES=ON
    - make

centos6-64bit-self-contained:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/$CI_JOB_NAME
  script:
  - curl -LO https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-x86_64.tar.gz
  - tar xf cmake-3.6.3-Linux-x86_64.tar.gz
  - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-x86_64/bin/cmake
  - make self GRDIR=/usr/local/gr
  - mkdir artifacts
  - cp lib/gks/demo artifacts/gksdemo
  - cp lib/gks/qt/gksqt artifacts/gksqt
  - cp lib/gr/demo artifacts/grdemo
  - cp lib/gks/libGKS.so lib/gks/libGKS.a lib/gks/plugin/*.so lib/gr/libGR.so lib/gr/libGR.a lib/gr3/libGR3.so lib/gr3/libGR3platform.so lib/gr/qtgr/*.so artifacts/
  - cp -r lib/gks/fonts artifacts/
  - mkdir artifacts/include/
  - cp lib/gks/gks.h lib/gr/gr.h lib/gr3/gr3.h lib/gr/qtgr/grwidget.h artifacts/include/
  - mv artifacts artifacts-centos6-64bit
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-centos6-64bit/

centos6-64bit-cmake-self-contained:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/centos6-64bit-self-contained
  script:
    - curl -LO https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-x86_64.tar.gz
    - tar xf cmake-3.6.3-Linux-x86_64.tar.gz
    - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-x86_64/bin/cmake
    - make -C 3rdparty default extras
    - mkdir build
    - cd build
    - $CMAKE_CMD .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/install -DGR_USE_BUNDLED_LIBRARIES=ON
    - make
    - make install
    - mv ../install/lib64/ ../install/lib/
    - cd ..
    - mv install artifacts-centos6-64bit-cmake
  artifacts:
    expire_in: 1 week
    paths:
      - artifacts-centos6-64bit-cmake/

centos6-64bit-system-dependencies:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/$CI_JOB_NAME
  script:
  - make install GRDIR=/usr/local/gr

centos6-64bit-cmake-system-dependencies:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/centos6-64bit-system-dependencies
  script:
    - yum install -y libtiff-devel bzip2-devel
    - curl -LO https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-x86_64.tar.gz
    - tar xf cmake-3.6.3-Linux-x86_64.tar.gz
    - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-x86_64/bin/cmake
    - make -C 3rdparty default TARGETS="qhull"
    - mkdir build
    - cd build
    - $CMAKE_CMD .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/install -DGR_USE_BUNDLED_LIBRARIES=ON
    - make

arch-self-contained:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/$CI_JOB_NAME
  script:
    - make self GRDIR=/usr/local/gr
    - mkdir artifacts
    - cp lib/gks/demo artifacts/gksdemo
    - cp lib/gks/qt/gksqt artifacts/gksqt
    - cp lib/gr/demo artifacts/grdemo
    - cp lib/gks/libGKS.so lib/gks/libGKS.a lib/gks/plugin/*.so lib/gr/libGR.so lib/gr/libGR.a lib/gr3/libGR3.so lib/gr3/libGR3platform.so lib/gr/qtgr/*.so artifacts/
    - cp -r lib/gks/fonts artifacts/
    - mkdir artifacts/include/
    - cp lib/gks/gks.h lib/gr/gr.h lib/gr3/gr3.h lib/gr/qtgr/grwidget.h artifacts/include/
    - mv artifacts artifacts-arch
  artifacts:
    expire_in: 1 week
    paths:
      - artifacts-arch/

arch-cmake-self-contained:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/arch-self-contained
  script:
    - make -C 3rdparty default extras
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/install -DGR_USE_BUNDLED_LIBRARIES=ON
    - make
    - make install
    - cd ..
    - mv install artifacts-arch-cmake
  artifacts:
    expire_in: 1 week
    paths:
      - artifacts-arch-cmake/

arch-system-dependencies:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/$CI_JOB_NAME
  script:
    - make install GRDIR=/usr/local/gr

arch-cmake-system-dependencies:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/arch-system-dependencies
  script:
    - make -C 3rdparty default TARGETS="qhull"
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/install -DGR_USE_BUNDLED_LIBRARIES=ON
    - make

windows-32bit-cross:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/$CI_JOB_NAME
  script:
  - wget https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-x86_64.tar.gz
  - tar xf cmake-3.6.3-Linux-x86_64.tar.gz
  - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-x86_64/bin/cmake
  - make -C 3rdparty default extras
    EXTRAS="tiff ogg theora vpx ffmpeg pixman cairo"
    HOST=i686-w64-mingw32
    ARCHITECTURE=i686
    OS=w64_x86-cross-mingw32
    CC=i686-w64-mingw32-gcc
    CXX=i686-w64-mingw32-g++
    AR=i686-w64-mingw32-ar
    GLFW_EXTRA_CMAKE_FLAGS=-DCMAKE_TOOLCHAIN_FILE=`pwd`/cmake/i686-w64-mingw32.cmake
    OGG_EXTRA_CONFIGURE_FLAGS=--host=i686-w64-mingw32
    THEORA_EXTRA_CONFIGURE_FLAGS="--host=i686-w64-mingw32 --disable-asm"
    FFMPEG_EXTRA_CONFIGURE_FLAGS="--cross-prefix=i686-w64-mingw32- --arch=i686 --target-os=mingw32"
    PIXMAN_EXTRA_CONFIGURE_FLAGS=--host=i686-w64-mingw32
    CAIRO_EXTRA_CONFIGURE_FLAGS=--host=i686-w64-mingw32
    TIFF_EXTRA_CONFIGURE_FLAGS=--host=i686-w64-mingw32
  - MAKE="make -f makefile.mingw" make -f makefile.mingw
    GRDIR=./
    CC=i686-w64-mingw32-gcc
    CXX=i686-w64-mingw32-g++
    AR=i686-w64-mingw32-ar
  - MAKE="make -f makefile.mingw" make -f makefile.mingw -C lib/gks/qt
    GRDIR=./
    CC=i686-w64-mingw32-gcc
    CXX=i686-w64-mingw32-g++
    AR=i686-w64-mingw32-ar
  - mkdir artifacts
  - cp lib/gks/qt/gksqt.exe artifacts/
  - cp lib/gks/qt/*.dll artifacts/
  - cp -r lib/gks/qt/platforms artifacts/
  - cp lib/gks/libgks.lib lib/gks/libgks.dll lib/gks/libgks.a lib/gks/plugin/*.dll lib/gks/plugin/*.a lib/gr/libgr.lib lib/gr/libgr.dll lib/gr/libgr.a lib/gr3/libGR3.dll lib/gr3/libGR3.a artifacts/
  - cp -r lib/gks/fonts artifacts/
  - cp /usr/lib/gcc/i686-w64-mingw32/6.3-win32/libgcc_s_sjlj-1.dll artifacts/
  - mkdir artifacts/include/
  - cp lib/gks/gks.h lib/gr/gr.h lib/gr3/gr3.h lib/gr/qtgr/grwidget.h artifacts/include/
  - mv artifacts artifacts-windows32
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-windows32/

windows-32bit-cmake-cross:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/windows-32bit-cross
  script:
    - mkdir qt5-runtime-Windows-i686
    - cd qt5-runtime-Windows-i686
    - wget https://gr-framework.org/downloads/3rdparty/qt5-runtime-Windows-i686.tar.gz
    - tar xf qt5-runtime-Windows-i686.tar.gz
    - cd ..
    - wget https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-x86_64.tar.gz
    - tar xf cmake-3.6.3-Linux-x86_64.tar.gz
    - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-x86_64/bin/cmake
    - make -C 3rdparty default extras
      EXTRAS="tiff ogg theora vpx ffmpeg pixman cairo"
      HOST=i686-w64-mingw32
      ARCHITECTURE=i686
      OS=w64_x86-cross-mingw32
      CC=i686-w64-mingw32-gcc
      CXX=i686-w64-mingw32-g++
      AR=i686-w64-mingw32-ar
      OPENJP2_EXTRA_CMAKE_FLAGS=-DCMAKE_TOOLCHAIN_FILE=`pwd`/cmake/i686-w64-mingw32.cmake
      GLFW_EXTRA_CMAKE_FLAGS=-DCMAKE_TOOLCHAIN_FILE=`pwd`/cmake/i686-w64-mingw32.cmake
      OGG_EXTRA_CONFIGURE_FLAGS=--host=i686-w64-mingw32
      THEORA_EXTRA_CONFIGURE_FLAGS="--host=i686-w64-mingw32 --disable-asm"
      FFMPEG_EXTRA_CONFIGURE_FLAGS="--cross-prefix=i686-w64-mingw32- --arch=i686 --target-os=mingw32"
      PIXMAN_EXTRA_CONFIGURE_FLAGS=--host=i686-w64-mingw32
      CAIRO_EXTRA_CONFIGURE_FLAGS=--host=i686-w64-mingw32
      TIFF_EXTRA_CONFIGURE_FLAGS=--host=i686-w64-mingw32
    - mkdir build
    - cd build
    - $CMAKE_CMD .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/install -DCMAKE_TOOLCHAIN_FILE=`pwd`/../cmake/i686-w64-mingw32.cmake -DCMAKE_MODULE_PATH=${CI_PROJECT_DIR}/qt5-runtime-Windows-i686/cmake -DGR_MANUAL_MOC_AND_RCC=ON -DGR_USE_BUNDLED_LIBRARIES=ON
    - make
    - make install
    - cd ..
    - mv qt5-runtime-Windows-i686/*.dll install/bin/
    - mv qt5-runtime-Windows-i686/platforms install/bin/platforms
    - cp /usr/lib/gcc/i686-w64-mingw32/6.3-win32/libgcc_s_sjlj-1.dll install/bin/
    - mv install artifacts-windows-32bit-cmake
  artifacts:
    expire_in: 1 week
    paths:
      - artifacts-windows-32bit-cmake/

windows-64bit-cross:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/$CI_JOB_NAME
  script:
  - wget https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-x86_64.tar.gz
  - tar xf cmake-3.6.3-Linux-x86_64.tar.gz
  - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-x86_64/bin/cmake
  - make -C 3rdparty default extras
    EXTRAS="tiff ogg theora vpx ffmpeg pixman cairo"
    HOST=x86_64-w64-mingw32
    ARCHITECTURE=x86_64
    OS=w64_amd64-cross-mingw32
    CC=x86_64-w64-mingw32-gcc
    CXX=x86_64-w64-mingw32-g++
    AR=x86_64-w64-mingw32-ar
    GLFW_EXTRA_CMAKE_FLAGS=-DCMAKE_TOOLCHAIN_FILE=`pwd`/cmake/x86_64-w64-mingw32.cmake
    OGG_EXTRA_CONFIGURE_FLAGS=--host=x86_64-w64-mingw32
    THEORA_EXTRA_CONFIGURE_FLAGS=--host=x86_64-w64-mingw32
    FFMPEG_EXTRA_CONFIGURE_FLAGS="--cross-prefix=x86_64-w64-mingw32- --arch=x86_64 --target-os=mingw32"
    PIXMAN_EXTRA_CONFIGURE_FLAGS=--host=x86_64-w64-mingw32
    CAIRO_EXTRA_CONFIGURE_FLAGS=--host=x86_64-w64-mingw32
    TIFF_EXTRA_CONFIGURE_FLAGS=--host=x86_64-w64-mingw32
  - MAKE="make -f makefile.mingw" make -f makefile.mingw
    GRDIR=./
    CC=x86_64-w64-mingw32-gcc
    CXX=x86_64-w64-mingw32-g++
    AR=x86_64-w64-mingw32-ar
  - mkdir artifacts
  - cp lib/gks/libgks.lib lib/gks/libgks.dll lib/gks/libgks.a lib/gks/plugin/*.dll lib/gks/plugin/*.a lib/gr/libgr.lib lib/gr/libgr.dll lib/gr/libgr.a lib/gr3/libGR3.dll lib/gr3/libGR3.a artifacts/
  - cp -r lib/gks/fonts artifacts/
  - cp /usr/lib/gcc/x86_64-w64-mingw32/6.3-win32/libgcc_s_seh-1.dll artifacts/
  - mkdir artifacts/include/
  - cp lib/gks/gks.h lib/gr/gr.h lib/gr3/gr3.h lib/gr/qtgr/grwidget.h artifacts/include/
  - mv artifacts artifacts-windows64
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-windows64/

windows-64bit-cmake-cross:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/windows-64bit-cross
  script:
    - wget https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Linux-x86_64.tar.gz
    - tar xf cmake-3.6.3-Linux-x86_64.tar.gz
    - export CMAKE_CMD=`pwd`/cmake-3.6.3-Linux-x86_64/bin/cmake
    - make -C 3rdparty default extras
      EXTRAS="tiff ogg theora vpx ffmpeg pixman cairo"
      HOST=x86_64-w64-mingw32
      ARCHITECTURE=x86_64
      OS=w64_amd64-cross-mingw32
      CC=x86_64-w64-mingw32-gcc
      CXX=x86_64-w64-mingw32-g++
      AR=x86_64-w64-mingw32-ar
      OPENJP2_EXTRA_CMAKE_FLAGS=-DCMAKE_TOOLCHAIN_FILE=`pwd`/cmake/x86_64-w64-mingw32.cmake
      GLFW_EXTRA_CMAKE_FLAGS=-DCMAKE_TOOLCHAIN_FILE=`pwd`/cmake/x86_64-w64-mingw32.cmake
      OGG_EXTRA_CONFIGURE_FLAGS=--host=x86_64-w64-mingw32
      THEORA_EXTRA_CONFIGURE_FLAGS=--host=x86_64-w64-mingw32
      FFMPEG_EXTRA_CONFIGURE_FLAGS="--cross-prefix=x86_64-w64-mingw32- --arch=x86_64 --target-os=mingw32"
      PIXMAN_EXTRA_CONFIGURE_FLAGS=--host=x86_64-w64-mingw32
      CAIRO_EXTRA_CONFIGURE_FLAGS=--host=x86_64-w64-mingw32
      TIFF_EXTRA_CONFIGURE_FLAGS=--host=x86_64-w64-mingw32
    - mkdir build
    - cd build
    - $CMAKE_CMD .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/install -DCMAKE_TOOLCHAIN_FILE=`pwd`/../cmake/x86_64-w64-mingw32.cmake -DGR_USE_BUNDLED_LIBRARIES=ON
    - make
    - make install
    - cd ..
    - cp /usr/lib/gcc/x86_64-w64-mingw32/6.3-win32/libgcc_s_seh-1.dll install/bin/
    - mv install artifacts-windows-64bit-cmake
  artifacts:
    expire_in: 1 week
    paths:
      - artifacts-windows-64bit-cmake/


darwin-self-contained:
  stage: build
  only:
    - branches@Scientific-IT-Systems/gr
    - tags@Scientific-IT-Systems/gr
  script:
  - curl -LO https://gr-framework.org/downloads/3rdparty/cmake-3.6.3-Darwin-x86_64.tar.gz
  - tar xf cmake-3.6.3-Darwin-x86_64.tar.gz
  - export CMAKE_CMD=`pwd`/cmake-3.6.3-Darwin-x86_64/CMake.app/Contents/bin/cmake
  - export MACOSX_DEPLOYMENT_TARGET=10.11
  - rm -rf /usr/local/gr/*
  - make self GRDIR=/usr/local/gr QMAKE=/usr/local/qt5/bin/qmake QT5_QMAKE=/usr/local/qt5/bin/qmake
  - mkdir artifacts
  - cp lib/gks/demo artifacts/gksdemo
  - cp lib/gr/demo artifacts/grdemo
  - cp lib/gks/libGKS.so lib/gks/libGKS.a lib/gks/plugin/*.so lib/gr/libGR.so lib/gr/libGR.a lib/gr3/libGR3.so lib/gr/qtgr/*.so artifacts/
  - cp -r lib/gks/fonts artifacts/
  - mkdir artifacts/include/
  - cp lib/gks/gks.h lib/gr/gr.h lib/gr3/gr3.h lib/gr/qtgr/grwidget.h artifacts/include/
  - mkdir artifacts/Applications/
  - cp -r lib/gks/quartz/build/Release/GKSTerm.app artifacts/Applications/GKSTerm.app
  - cp -r lib/gks/qt/gksqt.app artifacts/Applications/gksqt.app
  - mkdir -p artifacts/Applications/gksqt.app/Contents/Frameworks
  - mkdir -p artifacts/Applications/gksqt.app/Contents/plugins/platforms
  - cp /usr/local/qt5/plugins/platforms/libqcocoa.dylib artifacts/Applications/gksqt.app/Contents/plugins/platforms
  - cd artifacts/Applications
  - for BINARY in gksqt.app/Contents/plugins/platforms/libqcocoa.dylib gksqt.app/Contents/MacOS/gksqt; do
      for QT_FRAMEWORK in `otool -L $BINARY | tr '/' '\n' | grep -E 'Qt.*\.framework' | cut -d. -f1`; do
        rsync -a --exclude Headers --exclude *_debug* /usr/local/qt5/lib/$QT_FRAMEWORK.framework gksqt.app/Contents/Frameworks/;
        install_name_tool -change `otool -L $BINARY | grep $QT_FRAMEWORK | cut -d\( -f1` @executable_path/../Frameworks/$QT_FRAMEWORK.framework/Versions/Current/$QT_FRAMEWORK $BINARY;
      done;
    done
  - cd ../../
  - mv artifacts artifacts-darwin
  tags:
  - macos
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-darwin/

emscripten:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/$CI_JOB_NAME
  script:
  - source /emsdk/emsdk_env.sh
  - make -C js gr.js
  - mkdir artifacts
  - cp js/gr.js artifacts/
  - mv artifacts artifacts-js
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-js/

packages-tar:
  stage: package
  image: ubuntu:16.04
  variables:
    GIT_STRATEGY: none
  script:
  - mkdir -p Windows-i686/gr/bin
  - mkdir -p Windows-i686/gr/lib
  - mv artifacts-windows32/*.dll Windows-i686/gr/bin/
  - mv artifacts-windows32/*.lib Windows-i686/gr/bin/
  - mv artifacts-windows32/gksqt.exe Windows-i686/gr/bin/
  - mv artifacts-windows32/platforms Windows-i686/gr/bin/
  - mv artifacts-windows32/fonts Windows-i686/gr/
  - mv artifacts-windows32/include Windows-i686/gr/
  - cp artifacts-js/gr.js Windows-i686/gr/lib/
  - rm -rf artifacts-windows32
  - mkdir -p Windows-x86_64/gr/lib
  - cp -r Windows-i686/gr/bin Windows-x86_64/gr/bin
  - mv artifacts-windows64/*.dll Windows-x86_64/gr/bin/
  - mv artifacts-windows64/*.lib Windows-x86_64/gr/bin/
  - mv artifacts-windows64/fonts Windows-x86_64/gr/
  - mv artifacts-windows64/include Windows-x86_64/gr/
  - cp artifacts-js/gr.js Windows-x86_64/gr/lib/
  - rm -rf artifacts-windows64
  - mkdir -p Debian-x86_64/gr/bin
  - mkdir -p Debian-x86_64/gr/lib
  - mv artifacts-debian9/*.so Debian-x86_64/gr/lib/
  - mv artifacts-debian9/gksqt Debian-x86_64/gr/bin/
  - mv artifacts-debian9/fonts Debian-x86_64/gr/
  - mv artifacts-debian9/include Debian-x86_64/gr/
  - cp artifacts-js/gr.js Debian-x86_64/gr/lib/
  - rm -rf artifacts-debian9
  - mkdir -p Ubuntu-x86_64/gr/bin
  - mkdir -p Ubuntu-x86_64/gr/lib
  - mv artifacts-ubuntu1604/*.so Ubuntu-x86_64/gr/lib/
  - mv artifacts-ubuntu1604/gksqt Ubuntu-x86_64/gr/bin/
  - mv artifacts-ubuntu1604/fonts Ubuntu-x86_64/gr/
  - mv artifacts-ubuntu1604/include Ubuntu-x86_64/gr/
  - cp artifacts-js/gr.js Ubuntu-x86_64/gr/lib/
  - rm -rf artifacts-ubuntu1604
  - mkdir -p CentOS-x86_64/gr/bin
  - mkdir -p CentOS-x86_64/gr/lib
  - mv artifacts-centos7/*.so CentOS-x86_64/gr/lib/
  - mv artifacts-centos7/gksqt CentOS-x86_64/gr/bin/
  - mv artifacts-centos7/fonts CentOS-x86_64/gr/
  - mv artifacts-centos7/include CentOS-x86_64/gr/
  - cp artifacts-js/gr.js CentOS-x86_64/gr/lib/
  - rm -rf artifacts-centos7
  - mkdir -p Linux-i386/gr/bin
  - mkdir -p Linux-i386/gr/lib
  - mv artifacts-centos6-32bit/*.so Linux-i386/gr/lib/
  - mv artifacts-centos6-32bit/gksqt Linux-i386/gr/bin/
  - mv artifacts-centos6-32bit/fonts Linux-i386/gr/
  - mv artifacts-centos6-32bit/include Linux-i386/gr/
  - cp artifacts-js/gr.js Linux-i386/gr/lib/
  - rm -rf artifacts-centos6-32bit
  - mkdir -p Linux-x86_64/gr/bin
  - mkdir -p Linux-x86_64/gr/lib
  - mv artifacts-centos6-64bit/*.so Linux-x86_64/gr/lib/
  - mv artifacts-centos6-64bit/gksqt Linux-x86_64/gr/bin/
  - mv artifacts-centos6-64bit/fonts Linux-x86_64/gr/
  - mv artifacts-centos6-64bit/include Linux-x86_64/gr/
  - cp artifacts-js/gr.js Linux-x86_64/gr/lib/
  - rm -rf artifacts-centos6-64bit
  - mkdir -p ArchLinux-x86_64/gr/bin
  - mkdir -p ArchLinux-x86_64/gr/lib
  - mv artifacts-arch/*.so ArchLinux-x86_64/gr/lib/
  - mv artifacts-arch/gksqt ArchLinux-x86_64/gr/bin/
  - mv artifacts-arch/fonts ArchLinux-x86_64/gr/
  - mv artifacts-arch/include ArchLinux-x86_64/gr/
  - cp artifacts-js/gr.js ArchLinux-x86_64/gr/lib/
  - rm -rf artifacts-arch
  - if [ -d artifacts-darwin ]; then
      mkdir -p Darwin-x86_64/gr/lib;
      mv artifacts-darwin/*.so Darwin-x86_64/gr/lib/;
      mv artifacts-darwin/fonts Darwin-x86_64/gr/;
      mv artifacts-darwin/include Darwin-x86_64/gr/;
      mv artifacts-darwin/Applications Darwin-x86_64/gr/;
      cp artifacts-js/gr.js Darwin-x86_64/gr/lib/;
      rm -rf artifacts-darwin;
      cd Darwin-x86_64 && tar czf gr.tar.gz gr && cd -;
    fi
  - cd Windows-i686 && tar czf gr.tar.gz gr && cd -
  - cd Windows-x86_64 && tar czf gr.tar.gz gr && cd -
  - cd Debian-x86_64 && tar czf gr.tar.gz gr && cd -
  - cd Ubuntu-x86_64 && tar czf gr.tar.gz gr && cd -
  - cd CentOS-x86_64 && tar czf gr.tar.gz gr && cd -
  - cd Linux-i386 && tar czf gr.tar.gz gr && cd -
  - cd Linux-x86_64 && tar czf gr.tar.gz gr && cd -
  - cd ArchLinux-x86_64 && tar czf gr.tar.gz gr && cd -
  - mkdir Downloads
  - if echo "$CI_COMMIT_TAG" | grep -Eq '^v[0-9]+\.[0-9]+\.[0-9]+$'; then
      export VERSION=`echo "$CI_COMMIT_TAG" | sed 's/^v//'`;
      cp Windows-i686/gr.tar.gz Downloads/gr-$VERSION-Windows-i686.tar.gz;
      cp Windows-x86_64/gr.tar.gz Downloads/gr-$VERSION-Windows-x86_64.tar.gz;
      cp Debian-x86_64/gr.tar.gz Downloads/gr-$VERSION-Debian-x86_64.tar.gz;
      cp Ubuntu-x86_64/gr.tar.gz Downloads/gr-$VERSION-Ubuntu-x86_64.tar.gz;
      cp CentOS-x86_64/gr.tar.gz Downloads/gr-$VERSION-CentOS-x86_64.tar.gz;
      ln -s gr-$VERSION-CentOS-x86_64.tar.gz Downloads/gr-$VERSION-Redhat-x86_64.tar.gz;
      cp Linux-i386/gr.tar.gz Downloads/gr-$VERSION-Linux-i386.tar.gz;
      cp Linux-x86_64/gr.tar.gz Downloads/gr-$VERSION-Linux-x86_64.tar.gz;
      cp ArchLinux-x86_64/gr.tar.gz Downloads/gr-$VERSION-ArchLinux-x86_64.tar.gz;
      if [ -d Darwin-x86_64 ]; then
        cp Darwin-x86_64/gr.tar.gz Downloads/gr-$VERSION-Darwin-x86_64.tar.gz;
      fi;
      cp artifacts-js/gr.js Downloads/gr-$VERSION.js;
      cd Downloads && sha512sum -b gr-*.tar.gz > gr-$VERSION.sha512.txt && cd -;
    else
      cp Windows-i686/gr.tar.gz Downloads/gr-$CI_COMMIT_SHA-Windows-i686.tar.gz;
      cp Windows-x86_64/gr.tar.gz Downloads/gr-$CI_COMMIT_SHA-Windows-x86_64.tar.gz;
      cp Debian-x86_64/gr.tar.gz Downloads/gr-$CI_COMMIT_SHA-Debian-x86_64.tar.gz;
      cp Ubuntu-x86_64/gr.tar.gz Downloads/gr-$CI_COMMIT_SHA-Ubuntu-x86_64.tar.gz;
      cp CentOS-x86_64/gr.tar.gz Downloads/gr-$CI_COMMIT_SHA-CentOS-x86_64.tar.gz;
      ln -s gr-$CI_COMMIT_SHA-CentOS-x86_64.tar.gz Downloads/gr-$CI_COMMIT_SHA-Redhat-x86_64.tar.gz;
      cp Linux-i386/gr.tar.gz Downloads/gr-$CI_COMMIT_SHA-Linux-i386.tar.gz;
      cp Linux-x86_64/gr.tar.gz Downloads/gr-$CI_COMMIT_SHA-Linux-x86_64.tar.gz;
      cp ArchLinux-x86_64/gr.tar.gz Downloads/gr-$CI_COMMIT_SHA-ArchLinux-x86_64.tar.gz;
      if [ -d Darwin-x86_64 ]; then
        cp Darwin-x86_64/gr.tar.gz Downloads/gr-$CI_COMMIT_SHA-Darwin-x86_64.tar.gz;
      fi;
      cp artifacts-js/gr.js Downloads/gr-$CI_COMMIT_SHA.js;
      for f in Windows-i686 Windows-x86_64 Debian-x86_64 Ubuntu-x86_64 CentOS-x86_64 Redhat-x86_64 Linux-i386 Linux-x86_64 ArchLinux-x86_64; do
        ln -s gr-$CI_COMMIT_SHA-$f.tar.gz Downloads/gr-latest-$f.tar.gz;
      done;
      if [ -d Darwin-x86_64 ]; then
        ln -s gr-$CI_COMMIT_SHA-Darwin-x86_64.tar.gz Downloads/gr-latest-Darwin-x86_64.tar.gz;
      fi;
      ln -s gr-$CI_COMMIT_SHA.js Downloads/gr-latest.js;
      cd Downloads && sha512sum -b gr-*.tar.gz > gr-$CI_COMMIT_SHA.sha512.txt && cd -;
      ln -s gr-$CI_COMMIT_SHA.sha512.txt Downloads/gr-latest.sha512.txt;
    fi
  artifacts:
    expire_in: 1 week
    paths:
    - Downloads/

deploy:
  stage: deploy
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/$CI_JOB_NAME
  variables:
    GIT_STRATEGY: none
  only:
    - master@Scientific-IT-Systems/gr
    - develop@Scientific-IT-Systems/gr
    - tags@Scientific-IT-Systems/gr
  script:
  - chmod 644 Downloads/*.tar.gz
  - chmod 644 Downloads/*.js
  - python3 -m pip install git+https://gitlab-ci-token:${CI_JOB_TOKEN}@iffgit.fz-juelich.de/Scientific-IT-Systems/github-binary-upload.git
  - mkdir --mode=700 ~/.ssh/
  - (umask 0377 && echo "$SCIAPP_GR_PRIVATE_KEY" > ~/.ssh/id_rsa
                && echo "github.com $GITHUB_HOST_KEY" >> ~/.ssh/known_hosts)
  - git clone --mirror "$CI_REPOSITORY_URL" gr_mirror
  - cd gr_mirror && git push --mirror git@github.com:sciapp/gr.git && cd -
  - set +x
  - sshpass -p $RSYNC_PASSWORD rsync -av ./Downloads/ rsync://$RSYNC_USERNAME@iffweb.iff.kfa-juelich.de/gr/
  - if echo "$CI_COMMIT_TAG" | grep -Eq '^v[0-9]+\.[0-9]+\.[0-9]+$'; then
      echo "$SCIAPP_GR_ACCESS_TOKEN" | github-binary-upload --user jheinen sciapp/gr "$CI_COMMIT_TAG" Downloads/gr-*;
    fi
